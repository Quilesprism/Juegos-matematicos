/// Clases para nodos
let ver_grafo= true;


//Escenario base

var partida1=[1,2,4,4,6,8,9,11,15,19,26,22,23,21,20,28,31,35,41,38,39,46,50,58,66,73,72,70,71,82,84,88,93,95,89,94,101,107,107,106,114,125,121,120,123,122,136,136,141,149,159,173,183,183,182,198,217,217,217,225,202,224,226,227,220,221,223,222,238,239,236,208,192,192,178,168,154,146,154,169,171,155,147,139,133,132,134,135,128,129,129,116,108,102,97,90,86,83,86,90,96,97,102,108,109,117,130,117,109,102,102,108,116,129,129,116,116,129,131,130,138,145,145,144,152,152,152,164,166,167,177,190,206,233,245,249,253,261,259,259,258,264,271,279,292,293,293,290,290,278,270,264,258,259,261,260,261,259,258,264,271,279,292,300,306,314,327,338,351,351,351,367,392,396,397,394,395,403,372,372,402,404,405,373,373,357,341,332,333,330,330,331,340,355,371,400,400,401,399,370,354,340,331,330,333,332,341,332,317,309,301,308,316,316,330,333,332,341,356,356,357,373,405,373,373,373,404,402,403,395,368,368,352,353,369,396,369,353,339,329,315,307,300,306,314,314,327,338,350,366,390,408,415,423,423,436,447,461,477,505,504,502,503,519,533,532,548,574,596,623,655,708,676,677,675,638,606,607,607,606,638,674,681,680,680,641,609,589,560,541,525,515,489,469,453,453,452,468,487,483,482,485,484,514,522,538,554,556,557,587,605,637,672,668,669,667,666,697,649,617,593,617,649,696,694,695,691,690,693,692,684,643,685,683,682,689,688,686];
var partida2=[1,1,2,4,7,7,10,13,12,16,20,28,31,35,40,47,52,60,71,82,85,89,94,101,106,114,125,121,120,123,122,136,141,149,159,173,182,198,217,216,216,216,216,216,216,198,198,198,216,219,218,214,215,213,212,244,247,251,256,263,268,276,287,299,305,313,324,337,337,324,313,305,304,312,322,336,347,363,384,407,412,413,421,433,421,413,412,420,431,444,454,470,490,516,527,543,564,591,612,644,687];
var partida3= [1,3,5,9,11,14,18,25,29,32,36,43,45,44,49,57,65,81,83,87,83,86,90,97,97,90,86,87,91,87,86,90,97,102,109,117,130,138,145,153,166,164,165,176,188,204,204,188,176,165,165,152,164,166,167,177,190,206,233,245,249,253,260,265,273,272,280,295,291,278,270,271,279,293,292,300,307,315,328,326,327,314,326,328,326,328,329,339,352,368,395,403,372,356,357,373,373,404,402,403,395,394,368,394,397,396,392,393,393,391,390,408,415,414,422,435,446,458,474,498,498,505,504,477,477,504,502,503,519,533,549,533,532,533,549,576,597,625,624,656,711,707,706,709,708,676,639,677,675,638,606,588,559,558,561,541,525,515,525,541,561,558,559,540,558,561,560,589,608,640,679,671,636,670,673,672,668,669,667,666,666,697,697,649,617,593,617,649,696,694,648,695,691,690,693,692,684,643,685,683,682,689,688,686,687];
var partida4=[1,1,2,4,7,10,12,16,20,28,31,35,40,47,52,60,71,82,85,89,94,101,107,115,127,127,115,107,101,94,89,85,85,85,89,94,101,106,114,125,121,112,104,105,113,122,136,141,149,158,156,157,172,180,196,212,244,246,250,254,257,256,263,268,268,269,277,288,289,282,283,285,284,298,303,311,321,335,345,361,380,376,377,375,374,389,365,349,348,364,387,383,382,385,384,407,413,421,433,445,456,457,473,496,492,493,491,490,516,527,543,564,591,612,644,687];



//Escenario solo grafo


var partida5=[1,1,3,5,9,11,14,18,25,29,33,37,44,49,57,65,81,83,86,90,97,102,109,117,130,138,144,152,165,176,188,204,229,231,230,234,235,232,233,245,249,253,260,265,273,281,297,301,309,317,332,341,357,373,405,398,399,401,400,409,416,424,438,440,441,449,465,481,512,508,509,479,463,462,478,506,520,535,551,580,599,629,661,720,718,719,703,702,702,652,620,595,573,547,572,570,571,594,618,650,698,650,650,699,701,700,700,651,619,594,571,570,572,547,531,518,500,501,501,499,498,505,504,502,503,519,533,549,577,575,574,596,623,655,708,676,677,675,674,638,606,588,559,540,524,515,489,488,486,487,487,468,452,443,428,419,411,406,379,378,381,380,376,377,375,374,389,365,349,337,324,325,323,322,336,347,347,363,384,407,413,421,433,445,457,473,496,492,493,491,490,516,527,543,564,591,612,644
];
var partida6=[1,1,2,4,7,10,12,16,20,28,31,35,40,47,52,60,71,82,84,84,85,89,94,101,106,114,124,114,106,101,106,114,125,121,120,123,122,136,141,149,159,159,158,156,157,172,180,196,212,244,247,251,256,263,269,277,289,282,283,285,284,298,303,311,320,318,319,334,343,342,358,374,389,388,386,387,383,382,385,384,407,413,421,433,433,445,456,472,495,517,528,544,566,544,528,529,545,568,593,616,648,695,691,690,693,692,684,685,683,682,689,688,686
];
var partida7= [1,2,4,7,10,10,13,17,23,21,20,28,31,35,35,31,31,31,28,20,20,28,28,31,31,30,34,39,46,46,39,38,41,35,31,31,28,28,20,21,23,17,13,12,16,20,28,30,34,30,28,28,28,30,34,34,38,41,40,47,52,60,71,82,84,88,92,100,92,100,100,92,93,92,88,84,85,89,94,101,106,114,124,126,127,137,142,150,150,142,137,127,126,124,114,106,101,94,89,85,84,88,92,100,105,113,122,122,136,136,140,140,148,156,148,140,140,136,122,113,105,100,92,88,84,82,71,60,52,53,61,73,66,67,69,68,76,63,55,55,48,42,36,32,29,25,24,18,14,15,19,27,24,25,29,32,36,43,45,37,33,29,25,24,27,19,15,11,9,5,3,2,4,7,10,13,17,22,26,27,24,25,29,32,36,42,48,54,54,55,63,76,68,59,51,46,39,34,38,41,40,47,52,60,71,82,84,88,88,93,95,89,95,95,93,92,100,105,113,122,136,140,148,157,172,181,197,215,213,212,244,246,250,255,262,267,275,284,298,302,302,310,318,320,318,310,310,319,334,319,310,302,298,302,302,303,311,321,335,344,344,345,361,380,376,359,343,342,358,374,389,365,349,337,324,313,305,313,313,325,323,325,324,337,349,348,364,387,383,382,385,384,407,412,420,431,444,454,470,490,516,526,542,563,590,610,642,682,689,688,686
];
var partida8=[1,2,2,3,5,5,9,11,14,18,25,29,32,36,36,42,48,54,55,63,76,68,59,51,51,50,58,66,73,73,72,73,73,73,61,53,53,61,73,66,66,66,73,61,61,53,47,40,40,40,41,38,39,46,46,51,51,59,51,46,39,39,34,30,28,20,16,12,12,12,12,12,16,16,20,28,30,31,35,35,40,40,40,41,38,38,34,30,30,30,30,28,30,31,31,31,30,30,31,31,31,30,34,39,39,46,51,59,69,67,67,67,66,73,73,72,70,71,82,84,88,88,93,95,94,101,106,114,114,124,124,125,125,114,106,107,115,127,137,143,142,150,160,163,151,162,175,175,187,187,203,227,226,224,226,227,220,221,223,222,222,222,223,221,220,220,220,227,226,224,225,217,198,182,183,199,219,219,219,218,214,215,213,212,244,247,246,246,247,251,256,263,263,256,251,247,246,247,246,250,250,254,257,256,263,269,277,288,286,276,268,276,276,268,268,263,256,257,254,255,262,255,254,257,256,256,263,268,276,287,276,276,276,276,286,288,289,282,283,285,284,298,302,310,310,319,334,343,342,358,374,389,365,349,337,349,348,364,387,383,383,382,385,384,407,412,412,413,421,433,445,457,473,496,492,493,491,490,516,527,543,565,565,564,591,612,644
];


// Escenario solo agente.


var partida9=[1,1,2,2,4,7,10,12,16,20,28,30,31,31,30,31,35,40,47,52,60,71,82,84,88,92,93,88,84,82,71,70,72,73,73,61,53,47,40,41,41,35,31,28,20,21,23,23,17,13,10,7,4,2,1,2,4,7,10,10,12,16,20,28,28,28,28,31,31,31,30,34,34,30,31,35,41,41,40,47,52,60,71,82,84,88,92,100,105,113,122,136,141,149,158,159,173,182,198,198,217,217,198,182,198,198,182,182,173,173,183,199,218,214,197,197,215,213,212,244,247,251,256,263,268,276,287,299,305,313,324,337,348,348,349,365,389,374,358,342,358,375,377,376,380,381,381,361,345,344,335,321,311,311,320,318,310,319,334,334,319,310,302,302,303,311,320,318,319,334,343,343,342,358,374,389,365,349,337,337,349,348,364,387,383,382,385,384,407,413,421,433,445,445,457,473,496,492,493,491,490,516,526,542,563,590,610,642,682,689,688,686
];
var partida10=[1,1,1,3,3,3,5,5,5,5,9,11,11,11,11,11,15,19,27,24,25,29,32,33,33,37,37,44,44,49,57,65,81,83,83,87,87,87,86,86,90,90,86,86,87,91,91,91,87,86,90,97,102,108,109,117,130,138,145,144,152,144,145,145,144,152,152,165,176,176,176,176,188,204,228,228,243,243,211,211,242,240,241,237,236,236,239,238,222,223,221,220,227,227,220,227,227,226,224,225,225,217,198,198,216,219,219,218,214,214,215,213,212,244,246,246,247,251,256,263,263,268,268,268,276,286,288,289,282,282,289,282,282,282,283,285,285,275,284,298,303,311,311,321,335,344,360,379,406,411,411,410,418,426,442,451,467,484,514,523,539,556,554,555,586,602,634,666,697,696,694,696,649,617,593,568,569,545,529,528,517,495,472,456,456,457,457,456,456,457,473,496,492,493,491,490,516,526,542,563,590,610,642,682,689,688,686,687
];
var partida11= [1,2,2,4,4,4,4,4,4,2,3,5,9,11,11,11,11,11,11,9,9,11,11,11,11,14,14,18,25,29,32,32,33,33,37,37,45,45,44,44,44,37,37,44,44,37,37,33,29,29,32,36,42,48,48,48,55,55,63,63,77,74,74,62,62,74,77,77,77,74,75,79,79,78,80,81,83,83,83,83,83,81,81,80,78,78,79,75,75,75,75,79,79,78,80,81,83,86,86,90,90,90,90,86,87,87,87,87,86,86,90,90,86,83,81,65,65,65,57,57,49,44,44,37,33,29,25,25,24,27,27,24,24,25,29,32,33,37,45,43,43,43,43,42,42,43,45,45,37,37,45,43,36,32,29,25,29,29,33,32,36,43,43,36,32,33,33,33,29,25,25,24,24,27,27,27,26,22,22,23,21,21,21,21,16,12,16,16,21,23,22,26,26,27,24,24,25,29,29,32,36,36,43,45,44,49,44,49,49,44,44,37,37,44,44,49,57,57,65,81,83,86,90,97,102,108,116,116,108,109,117,131,130,130,130,130,130,117,109,109,108,116,128,128,129,131,129,128,135,134,132,133,139,146,154,154,168,154,154,168,178,193,192,208,236,236,239,209,193,178,168,168,154,168,169,171,171,169,168,168,168,168,168,169,154,154,146,139,139,133,133,133,139,147,155,171,169,169,154,154,168,168,178,193,209,239,236,236,236,236,237,241,210,210,210,194,179,170,155,155,155,170,171,170,179,195,211,242,211,243,228,228,228,228,204,188,188,189,189,188,204,228,243,243,243,228,243,211,195,195,179,170,170,170,171,169,168,168,178,193,209,239,236,237,241,241,237,237,236,236,208,192,193,193,193,192,208,237,241,210,240,242,211,211,195,179,195,195,195,211,243,228,228,228,228,228,204,188,188,176,165,165,164,166,153,153,166,164,152,144,144,144,145,145,144,152,165,176,188,204,228,204,204,204,188,188,189,189,188,188,188,188,189,176,176,165,152,144,145,153,166,164,152,164,166,167,177,190,206,233,245,248,252,252,252,259,261,253,253,260,265,272,273,281,297,296,294,294,294,294,294,295,280,272,273,281,297,301,308,308,316,330,330,316,308,301,301,308,308,316,316,330,330,330,333,317,309,301,297,296,296,296,296,294,280,272,273,281,273,272,265,260,253,249,249,253,261,260,265,272,280,295,291,290,293,292,300,306,307,315,328,326,314,314,306,306,314,327,338,350,366,390,408,414,422,422,422,434,437,423,423,436,447,436,447,461,461,461,460,476,460,447,436,423,415,415,415,415,414,422,422,434,437,436,447,447,460,476,502,504,502,503,519,533,549,577,577,575,548,532,548,575,577,576,576,549,549,577,549,576,577,576,549,533,532,548,574,596,623,655,708,676,639,639,607,607,607,588,559,558,561,561,561,541,525,525,515,489,488,486,486,487,487,487,483,482,485,467,451,450,466,482,483,487,486,488,489,515,525,541,560,589,560,561,558,559,558,561,541,525,524,540,558,559,588,607,607,607,607,607,588,559,559,559,588,607,639,639,607,606,638,674,681,680,678,679,671,670,673,637,672,668,668,672,672,673,670,671,636,604,605,637,637,673,672,672,673,637,673,670,671,671,670,670,673,673,637,605,604,605,637,672,668,669,667,634,602,586,555,538,522,514,514,484,485,482,466,450,442,451,442,426,418,410,406,379,360,360,344,335,321,321,320,318,310,302,310,310,310,319,334,342,358,374,389,388,386,364,348,337,324,313,305,313,305,304,312,322,336,347,363,384,407,412,420,420,412,412,420,431,444,444,454,470,491,493,493,491,470,470,490,470,454,454,470,490,491,493,492,496,497,494,472,456,445,456,472,472,456,456,472,494,497,496,492,493,491,470,490,516,526,526,542,542,526,527,527,543,564,591,612,644,687
];
var partida12=[1,2,4,7,10,10,13,12,12,16,20,28,30,34,39,39,38,41,40,47,52,60,71,82,84,88,92,100,105,113,122,136,141,149,159,173,182,198,217,216,219,199,183,173,159,158,159,173,159,149,141,136,122,123,120,121,125,124,126,127,115,107,107,101,94,89,85,82,71,82,84,88,92,100,105,113,122,136,140,148,157,172,180,196,212,244,246,250,255,262,267,275,284,298,302,310,319,334,342,358,374,389,365,349,337,324,324,313,305,305,304,312,322,336,347,346,362,383,382,385,384,407,412,413,421,433,445,457,473,496,492,493,491,490,516,527,543,564,591,612,644,687];





//Escenario Grafo mas agente.
var partida13= [1,1,1,2,3,5,9,11,14,14,15,19,26,22,22,26,27,24,25,29,32,36,43,45,44,49,57,65,81,83,86,90,97,102,109,117,117,131,117,117,131,129,128,135,135,119,111,103,98,103,103,103,111,119,135,128,128,129,131,130,138,145,145,144,152,152,165,176,188,204,228,204,204,229,204,188,176,176,189,205,230,234,235,232,233,245,249,253,260,265,265,265,272,272,273,281,297,297,281,296,294,295,291,290,293,292,300,300,300,300,307,315,315,328,326,327,327,327,314,306,300,306,307,315,328,326,326,328,329,339,339,352,368,395,403,372,356,357,373,405,398,399,401,400,400,400,401,399,370,354,340,331,316,316,330,333,332,341,356,372,403,395,368,352,353,369,396,392,393,393,391,390,408,415,423,436,447,447,460,461,477,505,504,502,503,519,533,532,548,574,596,623,655,708,676,639,676,677,675,638,606,588,559,558,561,560,589,608,640,679,671,636,604,604,604,605,637,672,672,672,637,637,673,670,671,679,640,608,589,560,541,525,515,489,488,488,469,453,443,428,419,411,406,379,378,381,381,380,376,377,375,358,342,334,319,319,310,302,298,284,285,283,274,274,283,285,284,284,275,285,283,282,289,289,288,286,287,299,299,304,312,323,325,324,337,348,364,387,383,382,385,384,407,413,421,433,432,430,431,444,455,471,492,496,497,494,495,517,529,545,568,593,617,649,696,694,695,691,690,693,692,684,643,611,610,642,682,689,688,686,687];
var partida14= [1,2,4,7,10,12,16,20,28,30,30,30,31,35,40,47,52,60,71,82,85,89,94,101,107,115,127,127,115,107,101,94,95,93,92,100,105,113,122,136,141,149,159,173,182,182,183,199,218,214,215,213,212,244,246,250,255,262,267,275,284,285,275,267,266,274,282,289,277,277,288,286,287,299,305,313,324,337,349,365,389,374,358,342,334,319,310,302,298,284,275,267,267,262,255,262,267,275,284,298,302,310,319,334,342,358,375,377,376,380,381,378,379,406,411,419,428,443,453,469,489,515,525,541,560,589,608,640,679,671,670,673,672,668,669,667,666,697,696,694,695,691,690,693,692,684,643,611,590,563,542,526,527,543,564,591,612,644,687];
var partida15= [1,2,2,2,3,5,5,9,11,14,14,18,25,29,29,33,33,33,33,37,45,45,45,37,37,33,29,29,33,33,37,44,44,49,49,57,57,65,65,81,83,83,87,91,91,98,98,103,103,111,111,119,135,135,134,132,132,133,133,133,133,133,118,132,132,134,119,119,111,111,103,103,98,98,91,87,87,83,81,65,65,57,49,57,57,65,65,81,83,83,86,86,90,97,97,102,102,109,109,117,117,130,130,138,144,144,145,153,153,167,167,177,190,206,233,233,245,248,248,252,258,258,264,264,270,270,271,271,279,279,292,292,300,300,306,306,307,307,315,315,315,307,307,306,306,314,327,338,338,350,350,366,366,391,391,393,393,367,367,367,367,392,392,367,367,351,350,350,366,390,408,408,415,415,423,423,437,434,435,435,446,446,459,459,475,501,499,499,498,474,499,501,501,500,500,518,531,547,547,573,573,595,620,620,652,702,702,705,705,704,704,700,701,701,699,699,698,698,713,713,713,713,657,657,625,625,597,625,657,657,713,713,712,710,711,711,707,707,706,706,709,709,708,676,676,639,677,675,675,674,674,681,681,680,680,678,679,679,671,671,636,636,604,605,605,637,637,672,672,668,668,669,669,667,667,666,697,697,696,696,694,694,695,695,691,690,690,690,690,693,693,692,692,684,684,643,643,611,611,610,610,642,682,689,689,688,688,686,686,687];
var partida16= [1,2,4,7,10,10,12,16,12,13,12,16,21,23,21,20,28,28,31,35,40,47,52,60,71,82,84,88,92,100,105,113,122,136,141,141,136,122,136,122,136,141,140,148,157,157,172,180,196,180,172,157,148,140,136,122,123,120,123,113,105,100,100,92,88,84,82,71,82,85,82,85,89,85,84,88,88,92,100,104,105,113,122,136,122,123,120,112,104,100,92,88,84,82,71,82,82,82,84,88,93,95,94,101,107,115,127,126,124,125,121,120,123,122,136,141,149,159,173,183,199,218,214,215,213,212,244,247,251,256,263,268,276,287,299,305,305,304,312,322,336,347,363,384,407,412,420,431,444,454,470,490,516,527,543,564,591,612,644,687];

/////// nuevos escenarios 3 y 4//////////////
////////////////////////////////////////////
///////////////////////////////////////////

// Escenario solo agente. 3


var partida9v =[1,2,4,4,7,10,12,16,20,28,30,34,39,39,46,51,51,50,58,66,73,72,70,71,82,84,88,88,84,85,89,89,94,101,107,115,127,137,142,150,142,143,151,151,143,142,150,161,174,185,201,201,222,222,223,201,185,174,161,150,142,137,137,142,150,160,163,162,175,186,187,203,227,227,227,226,224,202,186,175,162,163,151,143,137,127,126,124,125,121,120,123,122,136,141,149,159,173,182,198,182,183,199,218,214,215,213,212,244,246,246,247,251,256,256,257,254,250,254,257,251,251,256,263,268,269,277,289,282,274,283,285,284,298,302,310,318,320,311,311,311,303,302,298,284,298,302,310,318,318,319,334,342,358,374,374,375,377,359,343,334,319,310,302,298,298,302,310,318,320,311,303,298,303,311,320,311,303,298,298,303,311,321,335,345,361,380,376,376,376,359,343,334,319,310,319,319,310,302,303,311,321,335,344,360,379,406,411,419,428,443,452,468,486,488,469,453,443,452,468,487,483,482,485,484,514,522,538,555,586,602,634,666,697,696,694,648,616,593,616,648,695,691,690,693,692,684,643,611,590,563,542,526,527,543,564,591,612,644,687];
var partida10v =[1,1,2,2,3,5,9,9,8,5,3,2,4,4,7,7,10,10,10,10,10,12,12,12,16,20,28,30,30,30,28,31,35,40,47,47,52,53,61,72,70,60,71,82,84,88,88,93,95,94,94,94,94,94,94,101,101,107,107,107,107,106,114,124,124,125,121,121,120,123,122,136,136,136,136,140,140,140,141,149,149,159,158,156,157,172,172,180,196,212,244,246,246,250,250,246,247,251,251,251,257,256,263,263,268,276,287,287,287,287,286,288,288,288,289,277,269,268,268,276,286,276,286,288,289,282,282,282,283,283,285,284,298,298,302,310,310,319,334,334,319,318,320,321,321,320,318,319,334,343,343,342,358,375,377,376,376,359,359,377,377,375,374,389,365,349,349,349,348,364,387,383,382,385,384,407,407,413,421,433,445,456,456,445,445,433,421,421,421,432,430,431,444,455,454,470,490,516,526,527,543,564,591,612,644,687];
var partida11v =[1,3,5,9,11,15,19,26,22,23,21,20,28,30,34,38,41,35,35,40,47,52,60,71,82,85,89,94,101,101,107,115,127,115,107,101,94,89,85,82,84,88,92,100,105,113,122,136,141,149,159,173,183,199,218,214,215,213,212,244,244,247,251,256,263,268,276,286,288,286,287,299,304,312,323,325,324,337,348,364,364,387,383,382,385,384,407,412,412,420,430,432,433,445,457,473,497,494,495,517,529,545,569,567,566,592,614,646,691,691,690,693,692,684,643,611,610,642,682,689,688,686];
var partida12v =[1,3,5,8,6,7,10,12,16,20,28,31,35,40,47,52,60,71,82,84,88,93,95,94,101,106,114,125,114,106,106,114,125,121,120,123,122,136,136,141,149,159,158,156,157,172,180,196,212,244,247,251,257,254,255,262,267,275,284,284,275,275,285,283,282,289,277,269,263,269,277,288,286,287,299,299,304,312,323,325,324,337,349,349,348,364,364,387,383,382,385,384,407,413,421,433,432,430,431,444,454,470,490,516,527,526,542,563,590,610,642,682,689,688,686];


//Escenario Grafo mas agente.4

var partida13v =[1,2,4,6,8,5,5,8,6,7,10,12,13,13,10,10,10,10,10,12,16,20,28,31,35,40,47,53,61,72,70,71,82,84,88,92,100,105,113,122,136,136,140,148,157,172,172,180,196,212,244,247,251,256,263,269,277,289,282,283,285,284,298,302,310,302,302,302,303,311,311,321,321,320,318,319,334,342,343,359,377,359,359,377,375,374,389,365,349,348,364,387,383,382,385,384,407,413,421,432,430,431,444,454,470,490,516,527,543,564,591,612,644,687];
var partida14v =[1,1,3,5,9,11,11,15,15,11,9,5,3,2,4,7,10,12,16,20,28,30,28,30,34,38,41,40,47,53,52,60,70,71,82,84,84,84,85,89,94,94,94,89,85,82,82,71,70,72,73,73,72,70,71,82,85,84,88,88,93,95,89,94,101,107,115,127,127,126,115,107,101,94,94,95,93,92,100,105,113,122,136,140,148,157,172,180,196,212,244,247,251,256,263,269,263,256,257,254,255,262,266,274,266,267,275,285,283,282,289,288,286,287,299,305,313,325,323,322,336,347,363,384,407,412,420,431,444,454,470,490,516,526,526,527,543,564,591,612,644,687];
var partida15v =[1,2,2,4,4,7,10,10,10,7,10,10,13,12,12,16,16,21,23,22,26,27,24,25,29,29,33,33,33,37,37,37,37,44,49,49,49,49,57,65,81,83,83,81,65,57,57,49,56,64,79,64,79,79,79,75,75,74,74,74,77,76,68,69,67,66,73,61,73,66,73,72,70,71,82,84,88,92,100,104,104,105,113,122,122,136,140,148,156,158,156,157,172,180,196,212,244,246,246,247,251,256,263,268,276,287,299,305,313,324,313,305,299,287,299,304,312,323,323,312,312,304,312,322,336,347,363,384,407,412,420,430,420,430,430,431,431,444,454,470,490,516,526,542,563,590,610,642,682,689,688,686,687];
var partida16v =[1,1,1,3,2,4,7,10,10,13,10,7,7,10,13,17,13,17,13,10,7,10,13,12,16,20,28,31,35,40,47,52,60,71,82,84,88,92,100,104,100,105,113,122,136,141,136,140,148,156,158,159,159,158,156,157,172,181,172,180,196,212,244,246,247,251,256,263,268,276,287,299,304,312,322,336,346,336,347,363,384,407,412,420,430,420,431,444,454,470,490,490,470,490,516,526,526,542,562,565,564,591,612,644];

///////////////////////////////////////////////////////
///////////////////////////////////////////////////////


var sug_p1 =[];



class Boton {
  constructor(id, x, y, w, h, color)
  {  
    this.id =id;
    this.dx = x;
    this.dy =y;
    this.ancho = w;
    this.alto =h;
    this.color =color;
  }

  dibujarB()
  { 
    fill(this.color);
    ellipse(this.dx+50, this.dy+this.alto, 100, 150);
    circle(this.dx, (this.dy+(this.alto/2)), this.ancho*1.5);
    rect(this.dx- (this.ancho/2), this.dy, this.ancho, this.alto);
    fill(this.color);
    circle(this.dx, (this.dy+(this.alto/2)), this.ancho/2);
    circle(this.dx+100, (this.dy+(this.alto/2)), this.ancho*1.5);
    rect(this.dx- (this.ancho/2) +100, this.dy, this.ancho, this.alto);
    fill(this.color);
    circle(this.dx +100, (this.dy+(this.alto/2)), this.ancho/2);
  }

  onMe() { ////identica el mouse sobre un disco
    if (mouseX >  this.dx-(this.ancho/2) && mouseX< this.dx + (this.ancho/2)  && mouseY > this.dy && mouseY < this.dy+this.alto) {
      return this;
    } else {

      return 0;
    }
  }
}

class Nodo {
  constructor (id, x, y, tamaño, color)
  {
    this.id = id;
    this.x = x;
    this.y =y;
    this.tamaño = tamaño;
    this. color = color;
  }
  dibujarNodo() {
    fill(this.color);
    circle(this.x, this.y, this.tamaño);
  }
}



/// Clase para los pilares o torres
class Pilar {
  constructor (numero, color, st, stg)
  {
    this.numero = numero; /// numero de la torre
    this.color= color; /// color de la torre
    this.centro = (this.numero)*(w/8);
    this.base =395;
    this.ancho =15;
    this.st =st; /// vector de estado de la torre
    this.stg =stg; /// vector de estado de la torre para el gro inlcuyendo los 0 que no se pueden incluir en ST en tanot la posicioón del vertical del disco depende del valor maximo del ST y la movilidad del disco del valor minimo de ST
  }

  dibujarT () {
    fill(this.color);  
    let xx= (this.numero)*(w/8);
    rect(xx-(this.ancho/2), 200, 15, 200, 10, 10);
    noStroke();
    rect((xx-50-(this.ancho/2)), 395, 115, 25, 15, 15, 0, 0);
    fill(255);
    text (('T'+this.numero), this.centro-5, 410);
    //text (this.st, this.centro-5, 450);
    let top = min(this.st); 
    let tposm = this.st.length-1;
    // text (top+" en pos: "+tposm, this.centro-5, 470);
  }
}


/// Clase para los discos
class Disco {
  constructor (numeroD, colorD, tw, tpos, movil) 
  {
    this.numero = numeroD; /// numero del dico corresponde al tamaño
    this.color= colorD; /// color del disco arbitrario
    this.ancho = 40 +(this.numero*10);  // ancho del disco, depende del numero
    this.alto =25;
    this.centro = this.dx+(this.ancho/2);
    this.tw =tw; /// parametro que endica la torre en que está el disco
    this.tpos=tpos;  ///posición del disco en la torre
    this.dx = torres[this.tw-1].centro; /// posición en x del disco
    this.dy =torres[this.tw-1].base-(25+25*this.tpos); /// posicion en y del disco
    this.movil = movil;
  }

  dibujarDM() {
    let dc= this.color;
    fill(dc);
    let xx= 40 +(this.numero*10);
    stroke(0);
    rect(this.dx-(this.ancho/2), this.dy, xx, 25, 15, 15);
    fill(255);
    text(this.numero, this.dx-5, this.dy+15);
    // text("Estado: T1:"+ estado[0]+" T2:"+ estado[1]+" T3:"+ estado[2], t3.centro, 560);
    // text("Estado Anterior: "+ estado_anterior, t3.centro, 580); 
    // text("Clicks: "+ click, t3.centro, 590);
  }
  dibujarD() {
    let dc= this.color;
    fill(dc);
    let xx= 40 +(this.numero*10);
    stroke(0);
    this.dx = torres[this.tw-1].centro; /// posición en x del disco
    this.dy =torres[this.tw-1].base-(25+25*this.tpos); /// posicion en y del disco
    rect(this.dx-(this.ancho/2), this.dy, xx, 25, 15, 15);
    fill(255);
    text(this.numero, this.dx-5, this.dy+15);
  }
  onMe() { ////identica el mouse sobre un disco
    if (mouseX >  this.dx-(this.ancho/2) && mouseX< this.dx + (this.ancho/2)  && mouseY > this.dy && mouseY < this.dy+this.alto) {
      return this;
    } else {

      return 0;
    }
  }
}
function objeto() ///identifica el objeto sobre que se hace click, solo aplica a discos

{
  let di = d1.onMe();
  if (di==0)
  {
    di = d2.onMe();
  }
  if (di==0)
  {
    di = d3.onMe();
  }
  if (di==0)
  {
    di = d4.onMe();
  }
  if (di==0)
  {
    di = d5.onMe();
  }
  if (di==0)
  {
    di = d6.onMe();
  }
  return di;
}

function rehacer() /// redibuja todo
{
  background(255, 255, 255);  
  t1.dibujarT();
  t2.dibujarT();
  t3.dibujarT();
  d6.dibujarD();
  d5.dibujarD();
  d4.dibujarD();
  d3.dibujarD();
  d2.dibujarD();
  d1.dibujarD();
 // boton1.dibujarB();
 // text("Movimientos válidos: "+ movsok, t3.centro, 500); 
 // text("Movimientos NO válidos: "+ movsmal, t3.centro, 520); 
 //  // text("STG1: ", 700, 500);
  // text("STG2: ", 700, 550);
  // text("STG3: ", 700, 600);
  // text("DIFS1: ", 700, 450);


  //for (difs1 > 0; i--;)
  // {
  // stg1 [difs1]=0; 
  //  null;
  //  }
}

function rehacerM() /// redibuja todo
{
  background(255, 255, 255);  
  t1.dibujarT();
  t2.dibujarT();
  t3.dibujarT();
  d6.dibujarDM();
  d5.dibujarDM();
  d4.dibujarDM();
  d3.dibujarDM();
  d2.dibujarDM();
  d1.dibujarDM();
 // boton1.dibujarB();

  // text("Movimientos válidos: "+ movsok, t3.centro, 500); 
  // text("Movimientos NO válidos: "+ movsmal, t3.centro, 520); 
  // text("STG1: "+stg[0], 700, 500);
  // text("STG2: "+stg[1], 700, 520);
  // text("STG3: "+stg[2], 700, 540);
  // text("DIFS1: "+ difs[0] +" ; "+difs[1] +" ; "+difs[2], 700, 450);
  // text("NC: "+nc, 700, 300);
  // text("NUMEX: "+(numex+1), 700, 400);
  // text("ADY: "+ adyacentes, 120, 120);
  // text("RUTA Recomendada: "+ ruta, 120, 140);
  // text("Distancia desde SIG: "+ distfin, 120, 160);
  // text("STgg: "+stgg, 200, 280);
  // text("STg : "+estadios[1], 200, 300);
  // fill(255,0,0);
  // stroke(255,0,0);
  // fill(255,0,0);
  // text("Ruta Optima: "+ ruta_optima, 30, 450); 
  // fill(0,0,255);
  // text("Historico jugador: "+ partida, 30, 500); 
  // text("Metrica RH: "+ metrica_RH, 30, 520);
  // text("Metrica MOCH: "+ metrica_MOCH, 180, 520);
  // text("Historico RH: "+ RHS, 30, 540);
  // fill(0,255,0);
  // text("Metrica_BH: "+ metrica_BH, 30, 560); 
  // text("RESET_RH: "+ reset_RH, 180, 560);
  // text("Historico BH: "+ BHS, 30, 580);
  
  // text("Historico de sugerencia: "+ reco_partida, t1.centro, 50); 
  // text("ind_ram: "+ ind_ram, t1.centro, 70); 
  // text("ind_ramN: "+ ind_ramN, t1.centro, 90); 
  // text("ind_nr: "+ ind_nr, t1.centro, 110); 
  // text("ind_conf: "+ind_conf, t1.centro, 130); 
  // text("ind_confH: "+rachas, t1.centro, 150); 


  if (ver_grafo == true)
  {

//////Dibuja grafo completo

// fill(0, 255,0); 

// if (ver_grafo==true) {

//   fill(0,0,0);
//   stroke(0,0,0);

//   circle(map(xx[0], minx, maxx, 600, 1200), map(yy_mod[0], miny, maxy, 50, 550), 3);
//   for (i = 1; i< xx.length+1; i++)
//   {
//     fill(0, 0, 0); 
//     stroke(0,0,0);
//     circle(map(xx[i], minx, maxx, 600, 1200), map(yy_mod[i], miny, maxy, 50, 550), 3);
//   }
//   fill(255, 0, 0); 
//   stroke(255, 0, 0);
//   circle(map(maxx, minx, maxx, 600, 1200), map(miny, miny, maxy, 50, 550), 4);
//   fill(0);
//   stroke(0);

//   for (i = 0; i<ss.length; i++)
//   {
//     fill(0,0,0);
//     stroke(0,0,0);
//     line(map(xx[ss[i]-1], minx, maxx, 600, 1200), map(yy_mod[ss[i]-1], miny, maxy, 50, 550), map(xx[tt[i]-1], minx, maxx, 600, 1200), map(yy_mod[tt[i]-1], miny, maxy, 50, 550)) ;
//   }
// }


/////Dibuja las segerencias y estado actual

// if(blink % 2 == 0)
// {

//   fill(0, 255, 255);
//   stroke(0, 255, 0);
// }

// else
// {
//   fill(0, 0, 255);
//   stroke(0, 0, 255);
// }
// circle(map(xx[numex], minx, maxx, 600, 1200), map(yy_mod[numex], miny, maxy, 50, 550), 5);

// if (ruta.length>0) 
// {
//   fill(255, 255, 255);
//   stroke(255, 255, 255);
//   for (let i = 0; i< ruta.length; i++)
//   {
//     circle(map(xx[(ruta[i]-1)], minx, maxx, 600, 1200), map(yy_mod[(ruta[i]-1)], miny, maxy, 50, 550), 7);
//   }
//   fill(0);
//   stroke(0);
// }


fill(0);
stroke(0);
}
fill(0);
stroke(0);
}

function torreclick() /// retorna la torre (objeto)en la que se encuentra el disco sobre el que se hace click depende dp
{
  let torre = torres[dp.tw-1];
  //text("ULTIMA TORRE: "+ torre.numero, 400, 550);
  return torre;
}

function ontop()
{
 // text (t1.st.length,500,50);

 for (i = 0; i < 6; i++) {
  discos[i].movil=false;
}
if (t1.st.length<1) {
    // text("Vacio", t1.centro, 20);
  } else {
    //text(discos[min(t1.st)-1].numero, t1.centro, 20);
    discos[min(t1.st)-1].movil= true;
  }

  if (t2.st.length<1) {
    //text("Vacio", t2.centro, 20);
  } else {

    //text(discos[min(t2.st)-1].numero, t2.centro, 20);
    discos[min(t2.st)-1].movil= true;
  }
  if (t3.st.length<1) 
  {
    //text("Vacio", t3.centro, 20);
  } else
  {

    //text(discos[min(t3.st)-1].numero, t3.centro, 20);
    discos[min(t3.st)-1].movil= true;
  }
}

function compara()

  //i indica la posición del valor en el arreglo stg
  // k indica el numero en el arrreglo de estado con el que estoy comparando

  { 


    for (let k= 0; k < 729; k++) {
      nc=0;
      for (let i = 0; i < 18; i++)
      {
        if (stgg[i] !=estadios[k][i])
        {
        } else {
          nc = nc+1;
        }
      }
      if (nc > 17 ) {
        rt =k; 
        break;
      } else {
        rt = 999999;
      }
    }
    return rt;
  }

  function encontrarAdyacentes(origen)
  {
    let protoadyacentes=[];
    for (let i = 0; i < ss.length; i++)
    {
      if (ss[i]==origen)
      {
        protoadyacentes.push(tt[i]);
      }
    }
    for (let i = 0; i < tt.length; i++)
    {
      if (tt[i]==origen)
      {
        protoadyacentes.push(ss[i]);
      }
    }
    return protoadyacentes;
  }
  function recomendarAdyacente(vector)
  {
    var r;
    r = vector[0];
    for (let i =0; i < vector.length; i++)
    {
      if (distancia(vector[i]) < distancia(r))

      {
        r = vector[i];
      } 
      else 
      {
        r = r;
      }
    }
    return r;
  }

  function distancia (origen)
  {
    var rad = 0;
    var cat1 =0;
    var cat2=0;
    let mx = xx[686];
    let my = yy[686];
    cat1 = Math.abs(mx - xx[origen-1]) ;
    cat2= Math.abs(my - yy[origen-1]);
    rad = Math.pow((Math.pow(cat1, 2)+Math.pow(cat2, 2)), 0.5);
    return rad;
  }

  function calcularRuta()
  {
    let protoruta=[];
  // protoruta.push(numex+1);
  protoruta.push(reco);
  for (let n = 0; n < 10; n++) {
    let protoAd = encontrarAdyacentes(protoruta[protoruta.length-1]);
    var siguiente = recomendarAdyacente(protoAd);
    protoruta.push(siguiente);
  }
  return protoruta;
}

function cambiar_grafo ()
{
  ver_grafo= !ver_grafo;
}

function sug_post(post_partida)
{
 for (let i =0; i < post_partida.length; i ++)
 {
 let adyacentes_post = encontrarAdyacentes(post_partida[i]); // pista para A* numerx se pierde en este proceso 
 let reco_post = recomendarAdyacente(adyacentes_post);
 sug_p1.push(reco_post);
}
//alert("Calcule sug_p1");
}
